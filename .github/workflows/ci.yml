name: CI
on:
  pull_request:
  push:

jobs:
  # Do a quick check before proceeding to full tests
  check:
    name: Quick check
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy, rustfmt

      - name: Install Dependencies (Linux)
        run: sudo apt-get install libusb-1.0-0-dev libudev-dev

      - name: Exclude Crates
        run: |
          # `basic_*` fail to compile unless you
          # provide an appropriate target triple.
          sed -E -i.bak 's/.*basic_.*//' Cargo.toml

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace

      # TODO: Add something like <https://github.com/mbrobbel/rustfmt-check>,
      #       except for pushing commits automatically

  # Run tests on the host system
  test-hosted:
    name: Test (Hosted)
    needs: check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: Add `macos-10.15` after addressing the time inaccuracy that
        #       causes some tests to fail
        os: [ubuntu-20.04, windows-2019]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: Install Dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu-')
        run: sudo apt-get install libusb-1.0-0-dev libudev-dev

      - name: Exclude Crates (Windows)
        if: startsWith(matrix.os, 'windows-')
        shell: bash
        run: |
          # `constance_port_std` doesn't support Windows yet
          sed -E -i.bak 's/.*constance_port_std.*//' Cargo.toml
          sed -E -i.bak 's/.*basic.*//' Cargo.toml

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace
        env:
          RUST_LOG: debug

  # Run tests on a freestanding Arm target
  test-freestanding-arm:
    name: Test (Freestanding Arm)
    needs: check
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: Install Dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install libusb-1.0-0-dev libudev-dev qemu-system-arm

      - name: Install Additional Target of the Rust Toolchain
        run: |
          rustup target add thumbv6m-none-eabi thumbv7m-none-eabi thumbv7em-none-eabihf
          rustup target add thumbv8m.base-none-eabi thumbv8m.main-none-eabi thumbv8m.main-none-eabihf
          rustup target add armv7a-none-eabi

      - name: Test (Arm RealView PBX for Cortex-A9, Armv7-A)
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package constance_test_runner -- --target qemu_realview_pbx_a9 --log-level debug

      - name: Test (MPS2+ AN505, Armv8-M Mainline + FPU)
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package constance_test_runner -- --target qemu_mps2_an505 --log-level debug

      - name: Test (MPS2+ AN505, Armv8-M Mainline)
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package constance_test_runner -- --target qemu_mps2_an505 --arch cortex_m33 --log-level debug

      - name: Test (MPS2+ AN505, Armv8-M Baseline)
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package constance_test_runner -- --target qemu_mps2_an505 --arch cortex_m23 --log-level debug

      - name: Test (MPS2+ AN505, Armv7-M + FPU + DSP)
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package constance_test_runner -- --target qemu_mps2_an505 --arch cortex_m4f --log-level debug

      - name: Test (MPS2+ AN385, Armv7-M)
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package constance_test_runner -- --target qemu_mps2_an385 --log-level debug

      - name: Test (MPS2+ AN385, Armv6-M)
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package constance_test_runner -- --target qemu_mps2_an385 --arch cortex_m0 --log-level debug

  # Run tests on a freestanding RISC-V target
  test-freestanding-riscv:
    name: Test (Freestanding RISC-V)
    needs: check
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rust-src

      - name: Install Dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install libusb-1.0-0-dev libudev-dev

      - name: Install QEMU 5.1.0 from Source
        uses: ./.github/actions/install-qemu
        with:
          target-list: riscv32-softmmu,riscv64-softmmu

      - name: Install Additional Target of the Rust Toolchain
        run: |
          rustup target add riscv32imac-unknown-none-elf
          rustup target add riscv64imac-unknown-none-elf riscv64gc-unknown-none-elf

      - name: Test (SiFive U, RV64GC)
        run: |
          cargo run --package constance_test_runner -- --target qemu_sifive_u_rv64 --log-level debug

      - name: Test (SiFive E, RV64IMAC)
        run: |
          cargo run --package constance_test_runner -- --target qemu_sifive_e_rv64 --log-level debug

      - name: Test (SiFive U, RV32GC)
        run: |
          cargo run --package constance_test_runner -- --target qemu_sifive_u_rv32 --log-level debug

      - name: Test (SiFive E, RV32IMAC)
        run: |
          cargo run --package constance_test_runner -- --target qemu_sifive_e_rv32 --log-level debug
